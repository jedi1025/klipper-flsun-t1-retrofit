#FLSUN T1
####################################################################################################
#motor part
####################################################################################################

# Driver0 (S1)
# The stepper_a section describes the stepper controlling the front
# left tower (at 210 degrees). This section also controls the homing
# parameters (homing_speed, homing_retract_dist) for all towers.
[stepper_a]
step_pin: PC14
dir_pin: PC13
enable_pin: !PE6
microsteps: 16
rotation_distance: 60
full_steps_per_rotation: 200
endstop_pin: PC15
#position_endstop: 333
homing_speed: 40
homing_retract_speed: 10 
second_homing_speed: 10.0
homing_positive_dir: true
#angle: 210
#arm_length = 335

[tmc5160 stepper_a]
cs_pin: PD6
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 2.600
hold_current: 1.6
sense_resistor: 0.022
#stealthchop_threshold: 999999
stealthchop_threshold: 0

# Driver1 (S2)
# The stepper_b section describes the stepper controlling the front
# right tower (at 330 degrees).
[stepper_b]
step_pin: PE5
dir_pin: PE4
enable_pin: !PE3
microsteps: 16
rotation_distance: 60
full_steps_per_rotation: 200
endstop_pin: PF0
#position_endstop: 333
homing_speed: 40
homing_retract_speed: 10 
second_homing_speed: 10.0
homing_positive_dir: true
#angle: 330
#arm_length = 335

[tmc5160 stepper_b]
cs_pin: PD5
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 2.600
hold_current: 1.6
sense_resistor: 0.022
#stealthchop_threshold: 999999
stealthchop_threshold: 0

# Driver2 (S3)
# The stepper_c section describes the stepper controlling the rear
# tower (at 90 degrees).
[stepper_c]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE0
microsteps: 16
rotation_distance: 60
full_steps_per_rotation: 200
endstop_pin: PF1
#position_endstop: 333
homing_speed: 40
homing_retract_speed: 10 
second_homing_speed: 10.0
homing_positive_dir: true
#angle: 90
#arm_length = 335

[tmc5160 stepper_c]
cs_pin: PD4
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 2.600
hold_current: 1.6
sense_resistor: 0.022
#stealthchop_threshold: 999999
stealthchop_threshold: 0

# Driver3 (S4)
[extruder]
step_pin: PB9
dir_pin: PB8
enable_pin: !PB7
microsteps: 16
rotation_distance: 4.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PF6 # HE0
sensor_pin:  PB1 # T0
sensor_type: Generic 3950
max_extrude_cross_section: 50 # default 0.640
max_extrude_only_distance: 500
pressure_advance: 0.025 
#pressure_advance: 0.041
#control: pid
#pid_Kp: 17.586
#pid_Ki: 1.447
#pid_Kd: 53.416
min_temp: -273
max_temp: 350

[tmc5160 extruder]
cs_pin: PD3
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: .8
hold_current: .3
sense_resistor: 0.022
#stealthchop_threshold: 999999
stealthchop_threshold: 0

[filament_switch_sensor filament_sensor]
pause_on_runout: true
runout_gcode: 
    M117 Filament Runout Detected!
    PAUSE
switch_pin: !PF2

####################################################################################################
#mcu ,pin
####################################################################################################

[include mainsail.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_130012000C51323532393433-if00
# CAN bus is also available on this board

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor Host_CPU] #the temp of PC
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[exclude_object]

[heater_bed]
heater_pin: PF5
sensor_pin: PB0 # TB
sensor_type: Generic 3950
control: pid
pid_Kp: 72.549
pid_Ki: 1.414
pid_Kd: 930.447
min_temp: -130
max_temp: 130

[heater_fan heat_sink_fan] 
pin: PA0
heater_temp: 50.0

[output_pin b_pillar_light]
pin: PA2
value: 1

[output_pin BOXFAN_pin]
pin: PA1
pwm: False
value: 0

[fan]
pin: PA3

[neopixel overhead_lighting]
pin: PF11
chain_count: 62
initial_RED: 1.0
initial_GREEN: 1.0 
initial_BLUE: 1.0

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode:
    M106 S0
    TURN_OFF_HEATERS
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    boxfan_off

[save_variables]
filename: ~/printer_data/savedVariables1.cfg

[gcode_arcs]

[display_status]

[display]
lcd_type: st7920
cs_pin: PD13
sclk_pin: PD14
sid_pin: PD12
encoder_pins: ^PD15, ^PG3
click_pin: ^!PG4

[output_pin beeper]
pin: PG5

[printer]
kinematics: delta
max_velocity: 1000 #max print speed ,default is 400mm/s
max_accel: 10000
square_corner_velocity: 4 
max_z_velocity: 1000
#delta_radius: 187.3 # delta radius,default is 171.2
print_radius: 133 #max printable radius
minimum_z_position:-10 # min z position nozzle won't go to the position which Z lower the vaule

################################################################################################################
#calibrate and bed_mesh
################################################################################################################

[input_shaper]
shaper_freq_x: 34.78   # frequency for the X mark of the test model
shaper_freq_y: 31.68  # frequency for the Y mark of the test model

[auto_speed]

[probe]
pin: !PF3
x_offset: 0 
y_offset: 0 
#z_offset: -0.01 #the distance between nozzle and level switch
speed: .5
samples: 2 #probe one point three times get an average
samples_result: average
sample_retract_dist: .5
samples_tolerance: 0.05 # precision
samples_tolerance_retries: 5 

[bed_mesh]
speed: 80
horizontal_move_z: 3.5 #This value is related to the lift height of the nozzle during bed_mesh
mesh_radius: 125
mesh_origin: 0,0
round_probe_count: 15 # 7*7
algorithm: bicubic

[delta_calibrate]
radius: 125
horizontal_move_z: 10 #This value is related to the lift height of the nozzle during delta_calibrate
Speed: 100

[homing_override]
axes: xyz
gcode:
    G28 XYZ
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

#############################################################################################################
#GCODE
#############################################################################################################

[gcode_macro home]
gcode:
    G28
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

[gcode_macro disable_extruder_stepper]
gcode:
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[gcode_macro boxfan_on]
gcode:
    SET_PIN PIN=BOXFAN_pin VALUE=1

[gcode_macro boxfan_off]
gcode:
    SET_PIN PIN=BOXFAN_pin VALUE=0

[gcode_macro bed_level_1]
gcode:
    SET_GCODE_OFFSET Z=0
    M117 BED LEVEL START !
    G28
    M204 S200
    M104 S140
    M140 S60
    M109 S140
    M190 S60
    delta_calibrate
    G1 X0 Y0 Z50 F4200
    M104 S0
    M140 S0
    G28
    F104 K=level_state V=True
    save_config

[gcode_macro bed_level_2]
gcode:
    G28
    M204 S200
    M104 S140
    M140 S60
    M109 S140
    M190 S60
    G1 X0 Y0 Z50 F4200
    bed_mesh_calibrate
    G1 X0 Y0 Z50 F4200
    M104 S0
    M140 S0
    G28
    F104 K=level2_state V=True
    save_config

[gcode_macro UNLOAD_FILAMENT] #unload filament
gcode:
    {% set speed_factor = printer.gcode_move.speed_factor|float %}
    {% set extrude_factor = printer.gcode_move.extrude_factor|float %}
    M117 unload_filament heating completed!
    G91
    M220 S100   # set speed_factor to normal
    M221 S100   # set extrude_factor to normal
    G1 E10 F300
    G1 E-100 F800
    # G1 E-100 F200
    M400
    M220 S{speed_factor*100} # recover speed_factor
    M221 S{extrude_factor*100} # recover extrude_factor
    G90
    M117 unload_filament done!

[gcode_macro LOAD_FILAMENT] #load filament
gcode:
    {% set speed_factor = printer.gcode_move.speed_factor|float %}
    {% set extrude_factor = printer.gcode_move.extrude_factor|float %}

    M117 load_filament heating completed!
    G91
    M220 S100    # set speed_factor to normal
    M221 S100    # set extrude_factor to normal
    G1 E70 F800
    G1 E30 F300
    M400
    M220 S{speed_factor*100}  # recover speed_factor
    M221 S{extrude_factor*100}  # recover extrude_factor
    G90
    M117 load_filament done!

[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro TMC]
gcode:
    DUMP_TMC STEPPER=stepper_a
    DUMP_TMC STEPPER=stepper_b
    DUMP_TMC STEPPER=stepper_c
    DUMP_TMC STEPPER=extruder

[gcode_macro save_time]
gcode:
    {% if printer.save_variables.variables.total_time %}
        {% set print_time = printer.save_variables.variables.total_time %}
    {% else %} 
        {% set print_time = 0 %}
    {% endif %}
    {% set print_time = print_time + printer.print_stats.print_duration/3600 %}
    SAVE_VARIABLE VARIABLE=total_time VALUE={print_time}

[gcode_macro SET_GCODE_OFFSET]
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}

    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}

        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}

        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|
    {% if printer.save_temp_variables.variables.level_state %}
        F104 K=level_state V=False
        M117 BedLevel1 Done
        bed_level_2
    {% endif %}|
    {% if printer.save_temp_variables.variables.level2_state %}
        F104 K=level2_state V=False
        M117 BedLevel Done
    {% endif %}|
    {% if printer.save_variables.variables.resonances_state %}
        SAVE_VARIABLE VARIABLE=resonances_state VALUE=False
        G28
        M117 Vibration Compensation Done
    {% endif %}
    SAVE_VARIABLE VARIABLE=plr_flag VALUE=False

[idle_timeout]
gcode:
#     A list of G-Code commands to execute on an idle timeout. See
#     docs/Command_Templates.md for G-Code format. The default is to run
#     "TURN_OFF_HEATERS" and "M84".
timeout: 172800
#     Idle time (in seconds) to wait before running the above G-Code
#     commands. The default is 600 seconds.

####################################################################################################################################
#PAUSE ,RESUME ,CANCEL_PRINT
####################################################################################################################################
[pause_resume]

[gcode_macro PAUSE] 
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "printing" %}
        {% set x = params.X|default(0) %}      #edit to your park position
        {% set y = params.Y|default(-110) %}      #edit to your park position
        {% set z = params.Z|default(10)|float %} #edit to your park position
        {% set e = params.E|default(1) %}        #edit to your retract length

        ##### calculate save lift position #####
        {% set max_z = printer.toolhead.axis_maximum.z|float %}
        {% set homed_z = printer.gcode_move.homing_origin[2]|float %}
        {% set limit_z = (max_z - homed_z)|round(4,'floor') %}
        {% set act_z = printer.toolhead.position.z|float %}
        {% set lift_z = z|abs %}

        ### If the current position is greater than max_z-60, xy is set to 0###
        ### Normally, the max_z-limit_z is around 46mm,now expand 50mm###
        {% if act_z >= limit_z - 60 %}
            {% set x = 0 %}
            {% set y = 0 %}
            {% set toohigh = true %}
        {% else %}
            {% set toohigh = false %}
        {% endif %}

        {% if act_z < (limit_z - lift_z) %}
            {% set z_safe = act_z + lift_z %}
        {% else %}
            {% set z_safe = limit_z %}
        {% endif %}

        {% set fan_speed = printer.fan.speed|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE={fan_speed}
        ##### end of definitions #####
        PAUSE_BASE
        G91
        {% if printer.extruder.can_extrude|lower == 'true' %}
            G1 E-{e} F2100
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %}
        {% if "xyz" in printer.toolhead.homed_axes %}
            G90
            {% if toohigh == true %}
                G1 X{x} Y{y} Z{z_safe} F6000
                M117 Current position is too high,pause and move to X={ x } Y={ y } Z={ z_safe }
            {% else %}
                # Move the Z-axis to a safe height to avoid collision with the bed or other objects 
                G1 z{z_safe} F6000
                # Move the X and Y axes to the specified position
                G1 X{x} Y{y} F6000
                # clear bed_mesh Z fade height
                G1 X{x} Y{y} F6000
                M117 Pause and move to X={ x } Y={ y } Z={ z_safe }
            {% endif %}
        {% else %}
            {action_respond_info("Printer not homed")}
        {% endif %}
        {% set nozzle_temp = printer.extruder.target|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE={nozzle_temp}
        M104 S90
        {% set bed_temp = printer.heater_bed.target|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_temp VALUE={bed_temp}
        M106 S204
        M400
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_fan_speed: 0
variable_nozzle_temp: 0
variable_bed_temp: 0
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "paused" %}
        M140 S{bed_temp}
        M109 S{nozzle_temp}
        {% set e = params.E|default(1) %} #edit to your retract length
        #### get VELOCITY parameter if specified ####
        {% if 'VELOCITY' in params|upper %}
            {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
        {%else %}
            {% set get_params = "" %}
        {% endif %}
        ##### end of definitions #####
        G91
        {% if nozzle_temp >= 180 %}
            G1 E{e} F2100
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %}
        G90
        M400
        RESUME_BASE {get_params}
        {% set fan_speed = fan_speed * 255 %}
        M106 S{fan_speed}
    {% endif %}

[force_move]
enable_force_move: True

[gcode_macro RESTORE_E_CURRENT]
gcode:
    SET_TMC_CURRENT STEPPER=extruder CURRENT=1.2
##############################################################################################
##############################################################################################
[gcode_macro START_PRINT]
gcode:
    relay_on
    {% set sd_filename = printer.virtual_sdcard.file_path|string %}
    SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
    SAVE_VARIABLE VARIABLE=file_position VALUE=0
    SAVE_VARIABLE VARIABLE=x_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=y_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=z_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=e_pos VALUE=0.0
    SET_TMC_CURRENT STEPPER=extruder CURRENT=0.8
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=0
    CLEAR_PAUSE
    M105 S1
    M106 S255
    boxfan_on

[gcode_macro END_PRINT]
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    boxfan_off
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    M106 S255
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=100

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    M106 S0
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    M105 S1
    G28
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    boxfan_off
    M106 S255
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=100

[delayed_gcode heatsink]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
    M106 S0
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.094
#*#
#*# [printer]
#*# delta_radius = 170.580642
#*#
#*# [stepper_a]
#*# angle = 210.072356
#*# arm_length = 333.522780
#*# position_endstop = 332.325
#*#
#*# [stepper_b]
#*# angle = 330.077401
#*# arm_length = 331.832928
#*# position_endstop = 334.095
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 334.485160
#*# position_endstop = 333.755
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791, 0.832791
#*# 	0.986640, 0.986640, 0.986640, 0.986640, 0.986640, 0.968163, 0.975993, 0.920172, 0.875600, 0.798338, 0.760110, 0.760110, 0.760110, 0.760110, 0.760110
#*# 	0.920920, 0.920920, 0.920920, 0.920920, 0.867235, 0.900803, 0.890294, 0.905836, 0.917931, 0.865242, 0.848718, 0.824123, 0.824123, 0.824123, 0.824123
#*# 	0.944318, 0.944318, 0.944318, 0.973994, 1.085296, 1.053826, 0.965038, 0.950633, 0.855345, 0.845356, 0.832383, 0.766571, 0.756321, 0.756321, 0.756321
#*# 	0.928383, 0.928383, 0.869131, 0.887858, 0.865530, 0.863250, 0.900421, 0.871906, 0.880035, 0.867166, 0.850401, 0.847202, 0.821393, 0.797523, 0.797523
#*# 	0.785691, 0.785691, 0.782760, 0.781194, 0.845643, 0.845997, 0.852758, 0.850635, 0.836116, 0.854096, 0.831770, 0.822983, 0.798500, 0.787113, 0.787113
#*# 	0.686648, 0.686648, 0.807369, 0.818039, 0.803984, 0.811026, 0.831058, 0.826281, 0.852403, 0.843451, 0.863280, 0.855082, 0.873443, 0.874526, 0.874526
#*# 	0.815152, 0.848459, 0.836951, 0.864715, 0.835303, 0.825711, 0.813659, 0.833716, 0.833321, 0.829697, 0.829453, 0.844142, 0.827362, 0.863729, 0.910317
#*# 	0.821990, 0.821990, 0.815754, 0.826933, 0.794996, 0.813622, 0.823514, 0.837176, 0.837275, 0.846828, 0.863510, 0.894403, 0.915046, 0.921280, 0.921280
#*# 	0.908696, 0.908696, 0.875034, 0.857935, 0.818568, 0.789421, 0.802864, 0.806423, 0.833715, 0.836430, 0.846542, 0.894783, 0.898332, 0.965124, 0.965124
#*# 	0.936376, 0.936376, 0.870871, 0.844361, 0.856776, 0.835322, 0.805901, 0.833872, 0.817870, 0.831141, 0.845050, 0.920598, 0.947394, 1.013032, 1.013032
#*# 	0.872140, 0.872140, 0.872140, 0.854940, 0.846253, 0.815725, 0.822063, 0.811609, 0.824359, 0.825341, 0.846405, 0.891635, 0.936493, 0.936493, 0.936493
#*# 	0.898481, 0.898481, 0.898481, 0.898481, 0.831736, 0.827808, 0.814360, 0.811935, 0.813951, 0.829357, 0.850678, 0.897560, 0.897560, 0.897560, 0.897560
#*# 	0.866998, 0.866998, 0.866998, 0.866998, 0.866998, 0.856766, 0.822564, 0.808256, 0.823608, 0.845847, 0.867353, 0.867353, 0.867353, 0.867353, 0.867353
#*# 	0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156, 0.833156
#*# x_count = 15
#*# y_count = 15
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.95000000000002
#*# max_x = 124.95000000000002
#*# min_y = -124.95000000000002
#*# max_y = 124.94999999999996
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 11.896
#*# pid_ki = 0.620
#*# pid_kd = 57.099
#*#
#*# [delta_calibrate]
#*# height0 = -0.094
#*# height0_pos = 17737.500,17795.500,17847.000
#*# height1 = -0.094
#*# height1_pos = 21288.500,21400.000,15548.000
#*# height2 = -0.094
#*# height2_pos = 17102.000,23637.000,17243.000
#*# height3 = -0.094
#*# height3_pos = 15573.500,20816.500,20874.500
#*# height4 = -0.094
#*# height4_pos = 17104.500,17133.000,21852.500
#*# height5 = -0.094
#*# height5_pos = 20281.000,15782.000,20358.000
#*# height6 = -0.094
#*# height6_pos = 22594.500,17150.500,17197.000
#*# distance0 = 64.78999999999999
#*# distance0_pos1 = 17594.954,17878.180,17897.080
#*# distance0_pos2 = 16070.536,19439.081,19458.977
#*# distance1 = 64.80999999999999
#*# distance1_pos1 = 17666.676,17735.590,17968.876
#*# distance1_pos2 = 17108.359,17163.603,20752.021
#*# distance2 = 64.99000000000001
#*# distance2_pos1 = 17809.271,17664.848,17897.080
#*# distance2_pos2 = 19386.200,16140.378,19458.977
#*# distance3 = 64.72999999999999
#*# distance3_pos1 = 17880.136,17735.712,17754.489
#*# distance3_pos2 = 20663.209,17165.417,17183.348
#*# distance4 = 64.71
#*# distance4_pos1 = 17807.412,17878.303,17683.686
#*# distance4_pos2 = 19354.231,19441.196,16159.216
#*# distance5 = 64.79
#*# distance5_pos1 = 17664.834,17950.038,17754.489
#*# distance5_pos2 = 17080.936,20733.182,17183.348
#*# distance6 = 64.74
#*# distance6_pos1 = 16191.440,19112.791,19368.351
#*# distance6_pos2 = 17219.705,17069.512,20631.073
#*# distance7 = 64.96000000000001
#*# distance7_pos1 = 17235.382,17085.919,20392.606
#*# distance7_pos2 = 19434.775,16180.362,19270.407
#*# distance8 = 64.88000000000001
#*# distance8_pos1 = 19293.410,16260.503,19132.596
#*# distance8_pos2 = 20541.132,17276.678,17089.194
#*# distance9 = 64.72
#*# distance9_pos1 = 20302.692,17293.180,17105.543
#*# distance9_pos2 = 19165.882,19490.691,16199.145
#*# distance10 = 64.66
#*# distance10_pos1 = 19029.238,19350.427,16279.286
#*# distance10_pos2 = 16987.746,20612.159,17294.602
#*# distance11 = 64.77
#*# distance11_pos1 = 17004.962,20373.694,17311.163
#*# distance11_pos2 = 16111.299,19250.525,19508.537
